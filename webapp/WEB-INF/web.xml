<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:web="http://java.sun.com/xml/ns/javaee"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
         http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         id="WebApp_ID" version="3.0">
  <display-name>XYT</display-name>

  <!--<servlet>-->
    <!--<servlet-name>SocketAction</servlet-name>-->
    <!--<servlet-class>com.Action.SocketAction</servlet-class>-->
    <!--<load-on-startup>1</load-on-startup>-->
  <!--</servlet>-->
  <!--log4j配置-->
  <!--<context-param>-->
    <!--<param-name>log4jConfigLocation</param-name>-->
    <!--<param-value>classpath:log4j.properties</param-value>-->
  <!--</context-param>-->
  <!--<context-param>-->
    <!--<param-name>log4jRefreshInterval</param-name>-->
    <!--<param-value>60000</param-value>-->
  <!--</context-param>-->
  <!--<listener>-->
    <!--<listener-class>-->
      <!--org.springframework.web.util.Log4jConfigListener-->
    <!--</listener-class>-->
  <!--</listener>-->
  <!--end-->

  <!--Spring 核心配置-->
  <listener>
    <listener-class>
      org.springframework.web.context.request.RequestContextListener
    </listener-class>
  </listener>
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:applicationContext.xml</param-value>
  </context-param>
  <!--end-->

  <context-param>
    <param-name>webAppRootKey</param-name>
    <param-value>XYT.root</param-value>
  </context-param>



  <filter>
    <filter-name>openSessionInViewFilter</filter-name>
    <filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
    <init-param>
      <param-name>singleSession</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>openSessionInViewFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <session-config>
    <session-timeout>120</session-timeout>
  </session-config>
  <listener>
    <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>
  <!--<servlet>-->
    <!--<description></description>-->
    <!--<display-name>UploadServlet</display-name>-->
    <!--<servlet-name>UploadServlet</servlet-name>-->
    <!--<servlet-class>com.util.base.UploadServlet</servlet-class>-->
  <!--</servlet>-->
  <!--<servlet-mapping>-->
    <!--<servlet-name>UploadServlet</servlet-name>-->
    <!--<url-pattern>/UploadServlet</url-pattern>-->
  <!--</servlet-mapping>-->
  <!--<filter>-->
    <!--<filter-name>redisp</filter-name>-->
    <!--<filter-class>com.Interceptor.base.ReDispatcherFilter</filter-class>-->
    <!--<init-param>-->
      <!--<param-name>includeServlets</param-name>-->
      <!--<param-value>UploadServlet</param-value>-->
    <!--</init-param>-->
  <!--</filter>-->
  <!--<filter-mapping>-->
    <!--<filter-name>redisp</filter-name>-->
    <!--<url-pattern>/*</url-pattern>-->
  <!--</filter-mapping>-->
  <filter>
    <filter-name>struts2</filter-name>
    <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
    <init-param>
      <param-name>actionPackages</param-name>
      <param-value>com.Action</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>struts2</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>  
            org.springframework.web.filter.CharacterEncodingFilter  
        </filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>


</web-app>