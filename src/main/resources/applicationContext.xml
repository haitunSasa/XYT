<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"
		>
	<!-- 支持标注 -->
	<context:annotation-config/>
	<!-- 自动扫描dao和service包(自动注入) -->
	<context:component-scan base-package="com.Dao,com.Service" />

	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="url" value="jdbc:mysql://139.224.54.233:3306/XYT?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull"></property>
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property> 
		<property name="username" value="102Xi102"></property>
		<property name="password" value="X123456i"></property>
		<!-- <property name="username" value="admin"></property>
		<property name="password" value="admin"></property>	 -->
		<!--连接池创建的连接的默认的auto-commit状态-->
        <property name="defaultAutoCommit" value="true"/>
		<!--maxActive: 最大连接数量-->
        <property name="maxActive" value="500"/>
        <!--minIdle: 最小空闲连接-->  
        <property name="minIdle" value="5"/>
        <!--maxIdle: 最大空闲连接-->  
        <property name="maxIdle" value="20"/>
        <!--initialSize: 初始化连接-->  
        <property name="initialSize" value="30"/>
        <!-- 连接被泄露时是否打印 -->
        <property name="logAbandoned" value="true"/>
        <!--removeAbandoned: 是否自动回收超时连接-->  
        <property name="removeAbandoned"  value="true"/>
        <!--removeAbandonedTimeout: 超时时间(以秒数为单位)-->  
        <property name="removeAbandonedTimeout" value="10"/>
        <!--maxWait: 超时等待时间以毫秒为单位 1000等于60秒-->
        <property name="maxWait" value="1000"/>
        <!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. -->
        <property name="timeBetweenEvictionRunsMillis" value="10000"/>
        <!--  在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->
        <property name="numTestsPerEvictionRun" value="10"/>
        <!-- 1000 * 60 * 30  连接在池中保持空闲而不被空闲连接回收器线程-->
        <property name="minEvictableIdleTimeMillis" value="10000"/>
		<property name="validationQuery" value="SELECT NOW() FROM DUAL"/>	
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource"/>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				 <prop key="hibernate.autoReconnect">
				 	true
				 </prop>
				 <prop key="hibernate.show_sql">
				 	true
				 </prop>
				 <prop key="hibernate.jdbc.use_scrollable_resultset">
					false
				 </prop>
			</props>
		</property>

		<property name="packagesToScan">
		   <list>
		    <value>com.Entity</value><!-- 扫描实体类，也就是平时所说的model -->
		   </list>
    	</property>

	</bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="saveOrUpdate*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="grant*" propagation="REQUIRED" />

			<tx:method name="init*" propagation="REQUIRED" />

			<tx:method name="*" propagation="REQUIRED" read-only="true" />
		</tx:attributes>
 	</tx:advice>

 	 <!-- Spring Aop Config -->
    <aop:config proxy-target-class="true">
        <aop:pointcut id="pointcut" expression="execution(* com.Service..*Impl.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" />
    </aop:config>


</beans>
